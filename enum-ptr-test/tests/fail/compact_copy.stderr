error[E0277]: the trait bound `Foo<'a, 'b>: Copy` is not satisfied
 --> tests/fail/compact_copy.rs:5:10
  |
5 | #[derive(EnumPtr)]
  |          ^^^^^^^ the trait `Copy` is not implemented for `Foo<'a, 'b>`, which is required by `CompactInnerCopy<Foo<'a, 'b>>: enum_ptr::base::convert::private::Sealed`
  |
  = help: the trait `enum_ptr::base::convert::private::Sealed` is implemented for `CompactInnerCopy<T>`
  = note: required for `CompactInnerCopy<Foo<'a, 'b>>` to implement `enum_ptr::base::convert::private::Sealed`
note: required by a bound in `enum_ptr::Compactable::Inner`
 --> $WORKSPACE/enum-ptr/src/base/convert.rs
  |
  |     type Inner: private::Sealed;
  |                 ^^^^^^^^^^^^^^^ required by this bound in `Compactable::Inner`
  = note: this error originates in the derive macro `EnumPtr` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `Foo<'a, 'b>` with `#[derive(Copy)]`
  |
8  + #[derive(Copy)]
9  | enum Foo<'a, 'b> {
   |

error[E0277]: the trait bound `Foo<'a, 'b>: Copy` is not satisfied
 --> tests/fail/compact_copy.rs:5:10
  |
5 | #[derive(EnumPtr)]
  |          ^^^^^^^ the trait `Copy` is not implemented for `Foo<'a, 'b>`
  |
note: required by a bound in `CompactInnerCopy`
 --> $WORKSPACE/enum-ptr/src/base/inner.rs
  |
  | pub struct CompactInnerCopy<T: Compactable<Inner = Self> + Copy> {
  |                                                            ^^^^ required by this bound in `CompactInnerCopy`
  = note: this error originates in the derive macro `EnumPtr` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `Foo<'a, 'b>` with `#[derive(Copy)]`
  |
8  + #[derive(Copy)]
9  | enum Foo<'a, 'b> {
   |
